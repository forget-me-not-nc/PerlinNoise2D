#pragma once

#define _USE_MATH_DEFINES

#include "Noise.h"
#include "MathFunctions.h"

///////////////////////////////////
//
//
//////////////////////////////////

class PerlinNoise : public Noise
{
	///////////////////////////////////
	//
	//
	//////////////////////////////////

public:

	//////////////////////////////////
	
	PerlinNoise(unsigned int seed, int mult, WORLD_SIZE size, float harshness, INTERPOLATION_TYPES interpolationType);
	~PerlinNoise();

	///////////////////////////////////
	//
	//
	//////////////////////////////////

private:
	
	//////////////////////////////////

	vector<int> permV;

	INTERPOLATION_TYPES interpolationType;

	//////////////////////////////////

	virtual vector<Vertex> getVertices(GLenum polygonType);
	virtual void initVertices();
	double grad(int hash, double x, double y, double z);

	///////////////////////////////////
	//
	//
	//////////////////////////////////

protected:
	
	//////////////////////////////////

	double noise(double x, double y, double z);
};

